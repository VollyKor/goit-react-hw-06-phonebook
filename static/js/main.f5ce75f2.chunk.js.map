{"version":3,"sources":["Components/Filter/Filter.module.css","redux/phonebook/phonebook-selectors.jsx","redux/phonebook/phonebook-actions.jsx","Components/Form/Form.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","App.js","redux/phonebook/phonebook-reducer.jsx","redux/store.js","index.js","Components/Form/Form.module.css","Components/ContactList/ContactList.module.css"],"names":["module","exports","getContacts","state","phonebook","contacts","getFilter","filterQ","addContactR","createAction","deleteContactR","setContactR","setFilterR","Form","useState","name","setName","phoneNumber","setPhoneNumber","useSelector","dispatch","useDispatch","className","s","form","onSubmit","e","preventDefault","length","some","contact","includes","alert","newContact","id","uuidv4","label","type","input","value","onChange","target","btn","ContactList","list","filtered","toLowerCase","filter","visibleContacts","map","el","item","itemValue","onClick","Filter","App","useEffect","localStorage","getItem","data","JSON","parse","setItem","stringify","contactsReducer","createReducer","payload","filterReducer","phonebookReducer","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5ce75f2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__O-sUJ\",\"label\":\"Filter_label__3OWoN\"};","export const getContacts = state => state.phonebook.contacts;\r\nexport const getFilter = state => state.phonebook.filterQ;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\n// redux toolkit\r\n// =========================\r\nconst addContactR = createAction('phonebook/addContact');\r\nconst deleteContactR = createAction('phonebook/deleteContact');\r\nconst setContactR = createAction('phonebook/setContacts');\r\nconst setFilterR = createAction('phonebook/setFilter');\r\n\r\n// vanila redux\r\n// ==========================\r\n// const addContactR = value => ({\r\n//   type: 'phonebook/addContact',\r\n//   payload: value,\r\n// });\r\n\r\n// const deleteContactR = contactId => ({\r\n//   type: 'phonebook/deleteContact',\r\n//   payload: contactId,\r\n// });\r\n\r\n// const setContactR = contactsArr => ({\r\n//   type: 'phonebook/setContacts',\r\n//   payload: contactsArr,\r\n// });\r\n\r\n// const setFilterR = value => ({\r\n//   type: 'phonebook/setFilter',\r\n//   payload: value,\r\n// });\r\n\r\nexport { addContactR, deleteContactR, setFilterR, setContactR };\r\n","import s from './Form.module.css';\r\nimport { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { getContacts } from '../../redux/phonebook/phonebook-selectors';\r\nimport { addContactR } from '../../redux/phonebook/phonebook-actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nexport default function Form(/*{ onSubmit }*/) {\r\n  const [name, setName] = useState('');\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n  const addContact = newContact => dispatch(addContactR(newContact));\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (name.length > 0 && phoneNumber.length > 0) {\r\n      if (\r\n        contacts.some(contact => {\r\n          return contact.name.includes(name);\r\n        })\r\n      ) {\r\n        return alert(`${name} is already in contacts`);\r\n      }\r\n      addContact({\r\n        id: uuidv4(),\r\n        name,\r\n        phoneNumber,\r\n      });\r\n      resetForm();\r\n    }\r\n  };\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.label}>\r\n        <span>Name</span>\r\n        <input\r\n          type=\"text\"\r\n          className={s.input}\r\n          value={name}\r\n          onChange={e => {\r\n            setName(e.target.value);\r\n          }}\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        <span>Phone number</span>\r\n        <input\r\n          type=\"text\"\r\n          className={s.input}\r\n          value={phoneNumber}\r\n          onChange={e => {\r\n            setPhoneNumber(e.target.value);\r\n          }}\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.btn}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n  function resetForm() {\r\n    setName('');\r\n    setPhoneNumber('');\r\n  }\r\n}\r\n","import s from './ContactList.module.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteContactR } from '../../redux/phonebook/phonebook-actions';\r\nimport {\r\n  getContacts,\r\n  getFilter,\r\n} from '../../redux/phonebook/phonebook-selectors';\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(getContacts);\r\n  const filterQ = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  const visibleContacts = () => {\r\n    const filtered = filterQ.toLowerCase();\r\n    const filteredArr = contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(filtered),\r\n    );\r\n    return filteredArr;\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <ul className={s.list}>\r\n        {visibleContacts().map(el => {\r\n          return (\r\n            <li className={s.item} key={el.id}>\r\n              <p className={s.itemValue}>\r\n                <span> {el.name}: </span>\r\n                <span>{el.phoneNumber}</span>\r\n              </p>\r\n              <button\r\n                className={s.btn}\r\n                onClick={() => dispatch(deleteContactR(el.id))}\r\n              >\r\n                delete\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from '../../redux/phonebook/phonebook-selectors';\r\nimport { setFilterR } from '../../redux/phonebook/phonebook-actions';\r\n\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter(/*{ setFilter, data: { filterQ } }*/) {\r\n  const filterQ = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"filter\">\r\n      <label className={s.label}>\r\n        <span>Filter </span>\r\n        <input\r\n          type=\"text\"\r\n          className={s.input}\r\n          value={filterQ}\r\n          onChange={e => dispatch(setFilterR(e.target.value))}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n","import './App.module.css';\r\nimport React, { useEffect } from 'react';\r\nimport Form from './Components/Form/Form';\r\nimport ContactList from './Components/ContactList/ContactList';\r\nimport Filter from './Components/Filter/Filter';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setContactR } from './redux/phonebook/phonebook-actions';\r\nimport { getContacts } from './redux/phonebook/phonebook-selectors';\r\n\r\nfunction App() {\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n  const setContacts = contactsArr => dispatch(setContactR(contactsArr));\r\n\r\n  // get items from ls on first render\r\n  useEffect(() => {\r\n    if (localStorage.getItem('contacts') !== null) {\r\n      const data = JSON.parse(localStorage.getItem('contacts'));\r\n      setContacts(data);\r\n    }\r\n  }, []);\r\n\r\n  // add items to ls\r\n  useEffect(() => {\r\n    localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  return (\r\n    <main className=\"container\">\r\n      <h1>Phone Book</h1>\r\n      <Form />\r\n      <h2>Contact List</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactR,\r\n  deleteContactR,\r\n  setFilterR,\r\n  setContactR,\r\n} from './phonebook-actions';\r\n\r\nconst testContacts = [\r\n  { id: 'id-1', name: 'Rosie Simpson', phoneNumber: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', phoneNumber: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', phoneNumber: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', phoneNumber: '227-91-26' },\r\n];\r\n\r\nconst contactsReducer = createReducer(testContacts, {\r\n  [addContactR]: (state, { payload }) => [...state, payload],\r\n\r\n  [deleteContactR]: (state, { payload }) => {\r\n    const newContactsArray = state.filter(({ id }) => id !== payload);\r\n    return newContactsArray;\r\n  },\r\n\r\n  [setContactR]: (state, { payload }) => payload,\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [setFilterR]: (state, { payload }) => payload,\r\n});\r\n\r\nconst phonebookReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n  filterQ: filterReducer,\r\n});\r\n\r\n// const initialState = {\r\n//   contacts: testContacts,\r\n//   filterQ: '',\r\n// };\r\n\r\n// redux toolkit\r\n// =============================\r\n// const phonebookReducer = createReducer(initialState, {\r\n//   [addContactR]: (state, { payload }) => ({\r\n//     ...state,\r\n//     contacts: [...state.contacts, payload],\r\n//   }),\r\n//   [deleteContactR]: (state, { payload }) => {\r\n//     const newContactsArray = state.contacts.filter(({ id }) => id !== payload);\r\n//     return {\r\n//       ...state,\r\n//       contacts: newContactsArray,\r\n//     };\r\n//   },\r\n//   [setContactR]: (state, { payload }) => ({\r\n//     ...state,\r\n//     contacts: [...payload],\r\n//   }),\r\n//   [setFilterR]: (state, { payload }) => ({\r\n//     ...state,\r\n//     filterQ: payload,\r\n//   }),\r\n// });\r\n\r\n// vanila redux\r\n// ======================================\r\n// const phonebookReducer = (state = initialState, { type, payload }) => {\r\n//   switch (type) {\r\n//     case 'phonebook/addContact':\r\n//       return {\r\n//         ...state,\r\n//         contacts: [...state.contacts, payload],\r\n//       };\r\n\r\n//     case 'phonebook/deleteContact':\r\n//       const newContactsArray = state.contacts.filter(\r\n//         ({ id }) => id !== payload,\r\n//       );\r\n//       return {\r\n//         ...state,\r\n//         contacts: newContactsArray,\r\n//       };\r\n//     case 'phonebook/setContacts':\r\n//       return {\r\n//         ...state,\r\n//         contacts: [...payload],\r\n//       };\r\n\r\n//     case 'phonebook/setFilter':\r\n//       return {\r\n//         ...state,\r\n//         filterQ: payload,\r\n//       };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nexport default phonebookReducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n\r\nimport logger from 'redux-logger';\r\nimport phonebookReducer from './phonebook/phonebook-reducer';\r\n\r\nconst middleware = [...getDefaultMiddleware(), logger];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phonebook: phonebookReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware,\r\n});\r\n\r\n// vinilla redux\r\n// ======================\r\n// const rootReducer = combineReducers({\r\n//   phonebook: phonebookReducer,\r\n// });\r\n\r\n// const store = createStore(\r\n//   rootReducer,\r\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n// );\r\n// export default store;\r\n\r\n//  Redux toolkit\r\n// ===============================\r\n\r\nexport default store;\r\n","import './index.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Form_btn__2plDT\",\"form\":\"Form_form__2qJEX\",\"input\":\"Form_input__36Ew0\",\"label\":\"Form_label__3Hb0i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2xqy1\",\"itemDesc\":\"ContactList_itemDesc__2Qbzf\",\"itemValue\":\"ContactList_itemValue__3Aa5q\",\"btn\":\"ContactList_btn__2MPkA\"};"],"sourceRoot":""}